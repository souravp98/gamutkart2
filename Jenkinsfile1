pipeline {
    agent {
      docker {
          image 'maven:3.6.3-jdk-11'
          args '-v /var/run/docker.sock:/var/run/docker.sock'
         }
       }

//	environment {
//		 DOCKER_IMAGE = 'souravp98/gamutkart-img:latest'
//	}
    environment{
        TEST_FAIL_THRESHOLD = 5
    }

    stages {
        stage('Clone-Repo') {
	    	steps {
	        	checkout scm
	    	}
        }

        stage('Build') {
            steps {
                sh 'mvn install -Dmaven.test.skip=true'
            }
        }
		
        stage('Unit Tests') {
            steps {
                sh 'mvn compiler:testCompile'
                sh 'mvn surefire:test'
                junit 'target/**/*.xml'
           }
        }
  
        stage('Code Quality') {
          steps {
            script{
              def failedTests = 4
              echo "no. of failed tests: ${failedTests}"
              if (failedTests > env.TEST_FAIL_THRESHOLD.toInteger()){
                 error "Test failures exceed the threshold of ${env.TEST_FAIL_THERESHOLD}.Failing the build."
              }else{
                 echo "all tests are passed within the acceptable threshold"
              }
            }
         }
        }
        stage('Build Docker image') {
            steps { 
              script {
                 docker.build("${env.DOCKER_IMAGE}")
                  }
                 }
           }
         stage('Push docker image') {
          steps {
            script {
               docker.withRegistry('https://registry.hub.docker.com','souravp98-dockerhub') {
                                 def app = docker.build("${env.DOCKER_IMAGE}")
                                 app.push()
                 }
              }
          }
         }
  
        stage('Deployment') {
            steps {
                sh 'sshpass -p "wiculty" scp target/gamutkart.war wiculty@172.17.0.2:/home/wiculty/Distros/apache-tomcat-10.1.28/webapps'
                sh 'sshpass -p "wiculty" ssh wiculty@172.17.0.2 "/home/wiculty/Distros/apache-tomcat-10.1.28/bin/startup.sh"'
            }
        }
    }
}
